name: CI

on: push

jobs:
  ci:
    name: CI ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        poetry-version: [1.1.5]
        include:
          - os: ubuntu-16.04
            python-version: 3.4
            poetry-version: 1.1.5
    env:
      PYTHONDONTWRITEBYTECODE: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup poetry ${{ matrix.poetry-version }}
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          POETRY_VERSION=${{ matrix.poetry-version }} python get-poetry.py -y
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          rm -rf get-poetry.py

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Set up poetry cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: venv-${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          poetry install --remove-untracked --no-root

      - name: Lint
        run: |
          ./bin/lint.sh
      # - name: Get secrets
      #   id: secrets
      #   uses: google-github-actions/get-secretmanager-secrets@main
      #   with:
      #     credentials: ${{ secrets.GCP_SA_KEY }}
      #     secrets: |-
      #       GEMFURY_API_TOKEN:projects/rtbhouse-apps/secrets/GEMFURY_API_TOKEN
      # - name: Create config
      #   run: |
      #     cp tests/config.py.example tests/config.py
      # - name: Test
      #   run: |
      #     ./bin/test.sh
